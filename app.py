{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyNirJf1tlrkslpVGe2s1ONO",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/argynur/mulaidisini/blob/master/app.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L5RXNuDOuVOp",
        "outputId": "21d8207d-60d0-4e52-ffc8-2aaa54430708"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Overwriting app.py\n"
          ]
        }
      ],
      "source": [
        "%%writefile app.py\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import joblib\n",
        "import numpy as np\n",
        "\n",
        "# Muat model dan LabelEncoder\n",
        "try:\n",
        "    model = joblib.load('adult_income_predictor.pkl')\n",
        "    label_encoder = joblib.load('label_encoder.pkl')\n",
        "except FileNotFoundError:\n",
        "    st.error(\"Model atau LabelEncoder tidak ditemukan. Pastikan 'adult_income_predictor.pkl' dan 'label_encoder.pkl' ada di direktori yang sama.\")\n",
        "    st.stop() # Hentikan eksekusi Streamlit jika file tidak ditemukan\n",
        "\n",
        "st.title('Prediksi Pendapatan Individu')\n",
        "st.write('Aplikasi ini memprediksi apakah pendapatan seseorang lebih dari $50K atau kurang dari/sama dengan $50K berdasarkan karakteristiknya.')\n",
        "\n",
        "st.sidebar.header('Input Fitur')\n",
        "\n",
        "# Fungsi untuk mendapatkan input dari pengguna\n",
        "def user_input_features():\n",
        "    age = st.sidebar.slider('Umur', 17, 90, 30)\n",
        "    workclass = st.sidebar.selectbox('Kelas Pekerja', [\n",
        "        'Private', 'Self-emp-not-inc', 'Self-emp-inc', 'Federal-gov', 'Local-gov',\n",
        "        'State-gov', 'Without-pay', 'Never-worked'\n",
        "    ])\n",
        "    fnlwgt = st.sidebar.slider('Final Weight (fnlwgt)', 10000, 1500000, 150000)\n",
        "    education = st.sidebar.selectbox('Pendidikan', [\n",
        "        'Bachelors', 'Some-college', '11th', 'HS-grad', 'Prof-school',\n",
        "        'Assoc-acdm', 'Assoc-voc', '9th', '7th-8th', '12th', 'Masters',\n",
        "        '1st-4th', '10th', 'Doctorate', '5th-6th', 'Preschool'\n",
        "    ])\n",
        "    education_num = st.sidebar.slider('Tingkat Pendidikan (Numerik)', 1, 16, 10)\n",
        "    marital_status = st.sidebar.selectbox('Status Perkawinan', [\n",
        "        'Married-civ-spouse', 'Divorced', 'Never-married', 'Separated',\n",
        "        'Widowed', 'Married-spouse-absent', 'Married-AF-spouse'\n",
        "    ])\n",
        "    occupation = st.sidebar.selectbox('Pekerjaan', [\n",
        "        'Tech-support', 'Craft-repair', 'Other-service', 'Sales', 'Exec-managerial',\n",
        "        'Prof-specialty', 'Handlers-cleaners', 'Adm-clerical', 'Farming-fishing',\n",
        "        'Transport-moving', 'Priv-house-serv', 'Protective-serv', 'Armed-Forces'\n",
        "    ])\n",
        "    relationship = st.sidebar.selectbox('Hubungan', [\n",
        "        'Wife', 'Own-child', 'Husband', 'Not-in-family', 'Other-relative', 'Unmarried'\n",
        "    ])\n",
        "    race = st.sidebar.selectbox('Ras', [\n",
        "        'White', 'Asian-Pac-Islander', 'Black', 'Amer-Indian-Eskimo', 'Other'\n",
        "    ])\n",
        "    sex = st.sidebar.selectbox('Jenis Kelamin', ['Male', 'Female'])\n",
        "    capital_gain = st.sidebar.slider('Capital Gain', 0, 100000, 0)\n",
        "    capital_loss = st.sidebar.slider('Capital Loss', 0, 5000, 0)\n",
        "    hours_per_week = st.sidebar.slider('Jam Kerja per Minggu', 1, 99, 40)\n",
        "    native_country = st.sidebar.selectbox('Negara Asal', [\n",
        "        'United-States', 'Cambodia', 'England', 'Puerto-Rico', 'Germany',\n",
        "        'Outlying-US(Guam-USVI-etc)', 'India', 'Japan', 'Greece', 'South',\n",
        "        'China', 'Cuba', 'Iran', 'Honduras', 'Philippines', 'Italy', 'Poland',\n",
        "        'Jamaica', 'Vietnam', 'Mexico', 'Portugal', 'Ireland', 'France',\n",
        "        'Dominican-Republic', 'Laos', 'Ecuador', 'Taiwan', 'Haiti', 'Columbia',\n",
        "        'Hungary', 'Guatemala', 'Nicaragua', 'Scotland', 'Thailand',\n",
        "        'Yugoslavia', 'El-Salvador', 'Trinadad&Tobago', 'Peru', 'Hong',\n",
        "        'Holand-Netherlands'\n",
        "    ])\n",
        "\n",
        "    data = {\n",
        "        'age': age,\n",
        "        'workclass': workclass,\n",
        "        'fnlwgt': fnlwgt,\n",
        "        'education': education,\n",
        "        'education-num': education_num,\n",
        "        'marital-status': marital_status,\n",
        "        'occupation': occupation,\n",
        "        'relationship': relationship,\n",
        "        'race': race,\n",
        "        'sex': sex,\n",
        "        'capital-gain': capital_gain,\n",
        "        'capital-loss': capital_loss,\n",
        "        'hours-per-week': hours_per_week,\n",
        "        'native-country': native_country\n",
        "    }\n",
        "    features = pd.DataFrame(data, index=[0])\n",
        "    return features\n",
        "\n",
        "df_input = user_input_features()\n",
        "\n",
        "st.subheader('Input Pengguna')\n",
        "st.write(df_input)\n",
        "\n",
        "if st.button('Prediksi'):\n",
        "    try:\n",
        "        # Lakukan prediksi\n",
        "        prediction_encoded = model.predict(df_input)\n",
        "        prediction_proba = model.predict_proba(df_input)\n",
        "\n",
        "        # Decode hasil prediksi\n",
        "        prediction_class = label_encoder.inverse_transform(prediction_encoded)[0]\n",
        "\n",
        "        st.subheader('Hasil Prediksi')\n",
        "        st.write(f'Pendapatan Diprediksi: **{prediction_class}**')\n",
        "\n",
        "        st.subheader('Probabilitas Prediksi')\n",
        "        proba_df = pd.DataFrame(prediction_proba, columns=label_encoder.classes_)\n",
        "        st.write(proba_df)\n",
        "\n",
        "    except Exception as e:\n",
        "        st.error(f\"Terjadi kesalahan saat memprediksi: {e}\")\n",
        "        st.write(\"Pastikan semua fitur input memiliki format yang benar sesuai dengan model yang dilatih.\")\n",
        "\n",
        "st.markdown(\"\"\"\n",
        "---\n",
        "*Catatan: Aplikasi ini menggunakan model machine learning yang dilatih pada dataset sensus penduduk.*\n",
        "\"\"\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Instal Streamlit and ngrok\n",
        "!pip install streamlit pyngrok\n",
        "\n",
        "# Set your ngrok authtoken\n",
        "# Replace 'YOUR_NGROK_AUTHTOKEN' with your actual authtoken\n",
        "# You can find your authtoken on your ngrok dashboard: https://dashboard.ngrok.com/get-started/your-authtoken\n",
        "# If you don't have an account, sign up at https://dashboard.ngrok.com/signup\n",
        "import os\n",
        "from pyngrok import ngrok, conf\n",
        "\n",
        "# Check if NGROK_AUTH_TOKEN is set in environment variables (Colab Secrets)\n",
        "# If not, set it using pyngrok.conf\n",
        "NGROK_AUTH_TOKEN = os.environ.get(\"NGROK_AUTH_TOKEN\")\n",
        "if NGROK_AUTH_TOKEN:\n",
        "    conf.get_default().auth_token = NGROK_AUTH_TOKEN\n",
        "    print(\"ngrok authtoken set from environment variable.\")\n",
        "else:\n",
        "    # *** IMPORTANT ***: Replace 'YOUR_NGROK_AUTHTOKEN' with your actual ngrok authtoken.\n",
        "    # For better security, store your authtoken in Colab Secrets (under the 🔑 icon in the left panel)\n",
        "    # and name it NGROK_AUTH_TOKEN. Then you don't need to hardcode it here.\n",
        "    YOUR_NGROK_AUTHTOKEN = \"YOUR_NGROK_AUTHTOKEN\" # Replace with your actual authtoken or use Colab Secrets\n",
        "    if YOUR_NGROK_AUTHTOKEN == \"YOUR_NGROK_AUTHTOKEN\":\n",
        "        print(\"Please replace 'YOUR_NGROK_AUTHTOKEN' with your actual ngrok authtoken or set the NGROK_AUTH_TOKEN environment variable in Colab Secrets.\")\n",
        "    else:\n",
        "        conf.get_default().auth_token = YOUR_NGROK_AUTHTOKEN\n",
        "        print(\"ngrok authtoken set from hardcoded value.\")\n",
        "\n",
        "\n",
        "# Jalankan Streamlit di background\n",
        "# Use !streamlit run app.py & to run in background\n",
        "!streamlit run app.py &\n",
        "\n",
        "# Dapatkan URL ngrok\n",
        "try:\n",
        "    public_url = ngrok.connect(8501)\n",
        "    print(f\"Streamlit App URL: {public_url}\")\n",
        "except Exception as e:\n",
        "    print(f\"Failed to connect ngrok: {e}\")\n",
        "    print(\"Please ensure your ngrok authtoken is set correctly.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4SZM64Rkutzo",
        "outputId": "0dd0f6b3-adfb-445c-ac08-65c7c14d1fdd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting streamlit\n",
            "  Downloading streamlit-1.47.0-py3-none-any.whl.metadata (9.0 kB)\n",
            "Collecting pyngrok\n",
            "  Downloading pyngrok-7.2.12-py3-none-any.whl.metadata (9.4 kB)\n",
            "Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.5.0)\n",
            "Requirement already satisfied: blinker<2,>=1.5.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (1.9.0)\n",
            "Requirement already satisfied: cachetools<7,>=4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.5.2)\n",
            "Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (8.2.1)\n",
            "Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.0.2)\n",
            "Requirement already satisfied: packaging<26,>=20 in /usr/local/lib/python3.11/dist-packages (from streamlit) (25.0)\n",
            "Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.2.2)\n",
            "Requirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (11.2.1)\n",
            "Requirement already satisfied: protobuf<7,>=3.20 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.29.5)\n",
            "Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (18.1.0)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.32.3)\n",
            "Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (8.5.0)\n",
            "Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from streamlit) (0.10.2)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (4.14.1)\n",
            "Collecting watchdog<7,>=2.1.5 (from streamlit)\n",
            "  Downloading watchdog-6.0.0-py3-none-manylinux2014_x86_64.whl.metadata (44 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.3/44.3 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.11/dist-packages (from streamlit) (3.1.44)\n",
            "Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n",
            "  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n",
            "Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /usr/local/lib/python3.11/dist-packages (from streamlit) (6.4.2)\n",
            "Requirement already satisfied: PyYAML>=5.1 in /usr/local/lib/python3.11/dist-packages (from pyngrok) (6.0.2)\n",
            "Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (3.1.6)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (4.24.1)\n",
            "Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (1.47.1)\n",
            "Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.11/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.2)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (3.4.2)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (2.4.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (2025.7.14)\n",
            "Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.11/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (3.0.2)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2025.4.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.26.0)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.17.0)\n",
            "Downloading streamlit-1.47.0-py3-none-any.whl (9.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.9/9.9 MB\u001b[0m \u001b[31m72.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading pyngrok-7.2.12-py3-none-any.whl (26 kB)\n",
            "Downloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m90.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hDownloading watchdog-6.0.0-py3-none-manylinux2014_x86_64.whl (79 kB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.1/79.1 kB\u001b[0m \u001b[31m6.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: watchdog, pyngrok, pydeck, streamlit\n",
            "Successfully installed pydeck-0.9.1 pyngrok-7.2.12 streamlit-1.47.0 watchdog-6.0.0\n",
            "Please replace 'YOUR_NGROK_AUTHTOKEN' with your actual ngrok authtoken or set the NGROK_AUTH_TOKEN environment variable in Colab Secrets.\n",
            "\n",
            "Collecting usage statistics. To deactivate, set browser.gatherUsageStats to false.\n",
            "\u001b[0m\n",
            "\u001b[0m\n",
            "\u001b[34m\u001b[1m  You can now view your Streamlit app in your browser.\u001b[0m\n",
            "\u001b[0m\n",
            "\u001b[34m  Local URL: \u001b[0m\u001b[1mhttp://localhost:8501\u001b[0m\n",
            "\u001b[34m  Network URL: \u001b[0m\u001b[1mhttp://172.28.0.12:8501\u001b[0m\n",
            "\u001b[34m  External URL: \u001b[0m\u001b[1mhttp://35.203.133.246:8501\u001b[0m\n",
            "\u001b[0m\n",
            "\u001b[34m  Stopping...\u001b[0m\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "ERROR:pyngrok.process.ngrok:t=2025-07-22T12:02:37+0000 lvl=eror msg=\"failed to reconnect session\" obj=tunnels.session err=\"authentication failed: Usage of ngrok requires a verified account and authtoken.\\n\\nSign up for an account: https://dashboard.ngrok.com/signup\\nInstall your authtoken: https://dashboard.ngrok.com/get-started/your-authtoken\\r\\n\\r\\nERR_NGROK_4018\\r\\n\"\n",
            "ERROR:pyngrok.process.ngrok:t=2025-07-22T12:02:37+0000 lvl=eror msg=\"session closing\" obj=tunnels.session err=\"authentication failed: Usage of ngrok requires a verified account and authtoken.\\n\\nSign up for an account: https://dashboard.ngrok.com/signup\\nInstall your authtoken: https://dashboard.ngrok.com/get-started/your-authtoken\\r\\n\\r\\nERR_NGROK_4018\\r\\n\"\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Failed to connect ngrok: The ngrok process errored on start: authentication failed: Usage of ngrok requires a verified account and authtoken.\\n\\nSign up for an account: https://dashboard.ngrok.com/signup\\nInstall your authtoken: https://dashboard.ngrok.com/get-started/your-authtoken\\r\\n\\r\\nERR_NGROK_4018\\r\\n.\n",
            "Please ensure your ngrok authtoken is set correctly.\n"
          ]
        }
      ]
    }
  ]
}